services:
  heavydb:
    container_name: heavydb
    image: ${HEAVYAI_IMAGE}
    restart: unless-stopped
    ipc: shareable
    entrypoint: /bin/bash -c '/opt/heavyai/bin/heavydb --config ${HEAVY_CONFIG_BASE}/heavydb.conf'
    volumes:
      - ./data/heavyai:/var/lib/heavyai
      - ./configs/heavydb.conf:${HEAVY_CONFIG_BASE}/heavydb.conf:ro
    networks:
      - heavy-network
    ports:
      - "${HEAVYDB_PORT}:${HEAVYDB_PORT}"
      - "${HEAVYDB_BACKEND_PORT}:${HEAVYDB_BACKEND_PORT}"
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: ${GPU_COUNT}
              capabilities: [gpu]

  immerse:
    container_name: immerse
    image: ${HEAVYAI_IMAGE}
    restart: unless-stopped
    ipc: shareable
    entrypoint: /bin/bash -c '/opt/heavyai/bin/heavy_web_server --config ${HEAVY_CONFIG_BASE}/immerse/immerse.conf'
    volumes:
      - ./data/heavyai:/var/lib/heavyai
      - ./configs/immerse.conf:${HEAVY_CONFIG_BASE}/immerse/immerse.conf:ro
      - ./configs/servers.json:${HEAVY_CONFIG_BASE}/immerse/servers.json:ro
    networks:
      - heavy-network
    expose:
      - "${IMMERSE_PORT}"

  iq:
    container_name: heavyiq
    image: ${HEAVYAI_IMAGE}
    restart: unless-stopped
    ipc: shareable
    environment:
      - CONFIG_FILE=${HEAVY_CONFIG_BASE}/iq/iq.conf
      - MAPD_DATA=${HEAVY_CONFIG_BASE}/iq
      - MAPD_HEAVYIQ_PORT=${HEAVYIQ_PORT}
    entrypoint: /bin/bash -c '/opt/heavyai/scripts/ee/start_heavyiq.sh && tail -f /dev/null'
    volumes:
      - ./data/heavyai:/var/lib/heavyai
      - ./configs/iq.conf:${HEAVY_CONFIG_BASE}/iq/iq.conf:ro
    networks:
      - heavy-network
    expose:
      - "${HEAVYIQ_PORT}"

  jupyterhub:
    build:
      context: ./configs/jupyterhub
      dockerfile: Dockerfile.jupyterhub
      args:
        JUPYTERHUB_VERSION: ${JUPYTERHUB_VERSION}
    container_name: jupyterhub
    restart: unless-stopped
    volumes:
      - ./configs/jupyterhub/jupyterhub_config.py:/srv/jupyterhub/jupyterhub_config.py:ro
      - /var/run/docker.sock:/var/run/docker.sock:rw
      - ./data/jupyterhub:/data
      - ./data/heavyai:/var/lib/heavyai:ro
    environment:
      - JUPYTERHUB_ADMIN=${JUPYTERHUB_ADMIN}
      - DOCKER_NETWORK_NAME=heavy-network
      - DOCKER_NOTEBOOK_IMAGE=${DOCKER_NOTEBOOK_IMAGE}
      - DOCKER_NOTEBOOK_DIR=${DOCKER_NOTEBOOK_DIR}
    networks:
      - heavy-network
    expose:
      - "8000"

  caddy:
    image: caddy:latest
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./configs/Caddyfile:/etc/caddy/Caddyfile:ro
      - ./data/caddy/data:/data
      - ./data/caddy/config:/config
    networks:
      - heavy-network

networks:
  heavy-network:
    name: heavy-network